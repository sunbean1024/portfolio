{"version":3,"file":"Chip-CV5Sorm8.js","sources":["../../node_modules/@tanstack/query-core/build/modern/queryObserver.js","../../node_modules/@tanstack/react-query/build/modern/IsRestoringProvider.js","../../node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js","../../node_modules/@tanstack/react-query/build/modern/errorBoundaryUtils.js","../../node_modules/@tanstack/react-query/build/modern/suspense.js","../../node_modules/@tanstack/react-query/build/modern/useBaseQuery.js","../../node_modules/@tanstack/react-query/build/modern/useQuery.js","../../src/components/common/Header.tsx","../../src/components/common/Footer.tsx","../../src/assets/images/logos/butter-logo.png","../../src/assets/images/logos/jiransoft-logo.png","../../src/assets/images/projects/lgu1.png","../../src/assets/images/projects/lgu2.png","../../src/data/mockData.ts","../../src/api/mockApi.ts","../../src/hooks/useApi.ts","../../src/components/common/Chip.tsx"],"sourcesContent":["// src/queryObserver.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { fetchState } from \"./query.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport {\n  isServer,\n  isValidTimeout,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  timeUntilStale\n} from \"./utils.js\";\nimport { timeoutManager } from \"./timeoutManager.js\";\nvar QueryObserver = class extends Subscribable {\n  constructor(client, options) {\n    super();\n    this.options = options;\n    this.#client = client;\n    this.#selectError = null;\n    this.#currentThenable = pendingThenable();\n    this.bindMethods();\n    this.setOptions(options);\n  }\n  #client;\n  #currentQuery = void 0;\n  #currentQueryInitialState = void 0;\n  #currentResult = void 0;\n  #currentResultState;\n  #currentResultOptions;\n  #currentThenable;\n  #selectError;\n  #selectFn;\n  #selectResult;\n  // This property keeps track of the last query with defined data.\n  // It will be used to pass the previous data and query to the placeholder function between renders.\n  #lastQueryWithDefinedData;\n  #staleTimeoutId;\n  #refetchIntervalId;\n  #currentRefetchInterval;\n  #trackedProps = /* @__PURE__ */ new Set();\n  bindMethods() {\n    this.refetch = this.refetch.bind(this);\n  }\n  onSubscribe() {\n    if (this.listeners.size === 1) {\n      this.#currentQuery.addObserver(this);\n      if (shouldFetchOnMount(this.#currentQuery, this.options)) {\n        this.#executeFetch();\n      } else {\n        this.updateResult();\n      }\n      this.#updateTimers();\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.destroy();\n    }\n  }\n  shouldFetchOnReconnect() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnReconnect\n    );\n  }\n  shouldFetchOnWindowFocus() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnWindowFocus\n    );\n  }\n  destroy() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.#clearStaleTimeout();\n    this.#clearRefetchInterval();\n    this.#currentQuery.removeObserver(this);\n  }\n  setOptions(options) {\n    const prevOptions = this.options;\n    const prevQuery = this.#currentQuery;\n    this.options = this.#client.defaultQueryOptions(options);\n    if (this.options.enabled !== void 0 && typeof this.options.enabled !== \"boolean\" && typeof this.options.enabled !== \"function\" && typeof resolveEnabled(this.options.enabled, this.#currentQuery) !== \"boolean\") {\n      throw new Error(\n        \"Expected enabled to be a boolean or a callback that returns a boolean\"\n      );\n    }\n    this.#updateQuery();\n    this.#currentQuery.setOptions(this.options);\n    if (prevOptions._defaulted && !shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getQueryCache().notify({\n        type: \"observerOptionsUpdated\",\n        query: this.#currentQuery,\n        observer: this\n      });\n    }\n    const mounted = this.hasListeners();\n    if (mounted && shouldFetchOptionally(\n      this.#currentQuery,\n      prevQuery,\n      this.options,\n      prevOptions\n    )) {\n      this.#executeFetch();\n    }\n    this.updateResult();\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || resolveStaleTime(this.options.staleTime, this.#currentQuery) !== resolveStaleTime(prevOptions.staleTime, this.#currentQuery))) {\n      this.#updateStaleTimeout();\n    }\n    const nextRefetchInterval = this.#computeRefetchInterval();\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || nextRefetchInterval !== this.#currentRefetchInterval)) {\n      this.#updateRefetchInterval(nextRefetchInterval);\n    }\n  }\n  getOptimisticResult(options) {\n    const query = this.#client.getQueryCache().build(this.#client, options);\n    const result = this.createResult(query, options);\n    if (shouldAssignObserverCurrentProperties(this, result)) {\n      this.#currentResult = result;\n      this.#currentResultOptions = this.options;\n      this.#currentResultState = this.#currentQuery.state;\n    }\n    return result;\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  trackResult(result, onPropTracked) {\n    return new Proxy(result, {\n      get: (target, key) => {\n        this.trackProp(key);\n        onPropTracked?.(key);\n        if (key === \"promise\" && !this.options.experimental_prefetchInRender && this.#currentThenable.status === \"pending\") {\n          this.#currentThenable.reject(\n            new Error(\n              \"experimental_prefetchInRender feature flag is not enabled\"\n            )\n          );\n        }\n        return Reflect.get(target, key);\n      }\n    });\n  }\n  trackProp(key) {\n    this.#trackedProps.add(key);\n  }\n  getCurrentQuery() {\n    return this.#currentQuery;\n  }\n  refetch({ ...options } = {}) {\n    return this.fetch({\n      ...options\n    });\n  }\n  fetchOptimistic(options) {\n    const defaultedOptions = this.#client.defaultQueryOptions(options);\n    const query = this.#client.getQueryCache().build(this.#client, defaultedOptions);\n    return query.fetch().then(() => this.createResult(query, defaultedOptions));\n  }\n  fetch(fetchOptions) {\n    return this.#executeFetch({\n      ...fetchOptions,\n      cancelRefetch: fetchOptions.cancelRefetch ?? true\n    }).then(() => {\n      this.updateResult();\n      return this.#currentResult;\n    });\n  }\n  #executeFetch(fetchOptions) {\n    this.#updateQuery();\n    let promise = this.#currentQuery.fetch(\n      this.options,\n      fetchOptions\n    );\n    if (!fetchOptions?.throwOnError) {\n      promise = promise.catch(noop);\n    }\n    return promise;\n  }\n  #updateStaleTimeout() {\n    this.#clearStaleTimeout();\n    const staleTime = resolveStaleTime(\n      this.options.staleTime,\n      this.#currentQuery\n    );\n    if (isServer || this.#currentResult.isStale || !isValidTimeout(staleTime)) {\n      return;\n    }\n    const time = timeUntilStale(this.#currentResult.dataUpdatedAt, staleTime);\n    const timeout = time + 1;\n    this.#staleTimeoutId = timeoutManager.setTimeout(() => {\n      if (!this.#currentResult.isStale) {\n        this.updateResult();\n      }\n    }, timeout);\n  }\n  #computeRefetchInterval() {\n    return (typeof this.options.refetchInterval === \"function\" ? this.options.refetchInterval(this.#currentQuery) : this.options.refetchInterval) ?? false;\n  }\n  #updateRefetchInterval(nextInterval) {\n    this.#clearRefetchInterval();\n    this.#currentRefetchInterval = nextInterval;\n    if (isServer || resolveEnabled(this.options.enabled, this.#currentQuery) === false || !isValidTimeout(this.#currentRefetchInterval) || this.#currentRefetchInterval === 0) {\n      return;\n    }\n    this.#refetchIntervalId = timeoutManager.setInterval(() => {\n      if (this.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        this.#executeFetch();\n      }\n    }, this.#currentRefetchInterval);\n  }\n  #updateTimers() {\n    this.#updateStaleTimeout();\n    this.#updateRefetchInterval(this.#computeRefetchInterval());\n  }\n  #clearStaleTimeout() {\n    if (this.#staleTimeoutId) {\n      timeoutManager.clearTimeout(this.#staleTimeoutId);\n      this.#staleTimeoutId = void 0;\n    }\n  }\n  #clearRefetchInterval() {\n    if (this.#refetchIntervalId) {\n      timeoutManager.clearInterval(this.#refetchIntervalId);\n      this.#refetchIntervalId = void 0;\n    }\n  }\n  createResult(query, options) {\n    const prevQuery = this.#currentQuery;\n    const prevOptions = this.options;\n    const prevResult = this.#currentResult;\n    const prevResultState = this.#currentResultState;\n    const prevResultOptions = this.#currentResultOptions;\n    const queryChange = query !== prevQuery;\n    const queryInitialState = queryChange ? query.state : this.#currentQueryInitialState;\n    const { state } = query;\n    let newState = { ...state };\n    let isPlaceholderData = false;\n    let data;\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners();\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n      if (fetchOnMount || fetchOptionally) {\n        newState = {\n          ...newState,\n          ...fetchState(state.data, query.options)\n        };\n      }\n      if (options._optimisticResults === \"isRestoring\") {\n        newState.fetchStatus = \"idle\";\n      }\n    }\n    let { error, errorUpdatedAt, status } = newState;\n    data = newState.data;\n    let skipSelect = false;\n    if (options.placeholderData !== void 0 && data === void 0 && status === \"pending\") {\n      let placeholderData;\n      if (prevResult?.isPlaceholderData && options.placeholderData === prevResultOptions?.placeholderData) {\n        placeholderData = prevResult.data;\n        skipSelect = true;\n      } else {\n        placeholderData = typeof options.placeholderData === \"function\" ? options.placeholderData(\n          this.#lastQueryWithDefinedData?.state.data,\n          this.#lastQueryWithDefinedData\n        ) : options.placeholderData;\n      }\n      if (placeholderData !== void 0) {\n        status = \"success\";\n        data = replaceData(\n          prevResult?.data,\n          placeholderData,\n          options\n        );\n        isPlaceholderData = true;\n      }\n    }\n    if (options.select && data !== void 0 && !skipSelect) {\n      if (prevResult && data === prevResultState?.data && options.select === this.#selectFn) {\n        data = this.#selectResult;\n      } else {\n        try {\n          this.#selectFn = options.select;\n          data = options.select(data);\n          data = replaceData(prevResult?.data, data, options);\n          this.#selectResult = data;\n          this.#selectError = null;\n        } catch (selectError) {\n          this.#selectError = selectError;\n        }\n      }\n    }\n    if (this.#selectError) {\n      error = this.#selectError;\n      data = this.#selectResult;\n      errorUpdatedAt = Date.now();\n      status = \"error\";\n    }\n    const isFetching = newState.fetchStatus === \"fetching\";\n    const isPending = status === \"pending\";\n    const isError = status === \"error\";\n    const isLoading = isPending && isFetching;\n    const hasData = data !== void 0;\n    const result = {\n      status,\n      fetchStatus: newState.fetchStatus,\n      isPending,\n      isSuccess: status === \"success\",\n      isError,\n      isInitialLoading: isLoading,\n      isLoading,\n      data,\n      dataUpdatedAt: newState.dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: newState.fetchFailureCount,\n      failureReason: newState.fetchFailureReason,\n      errorUpdateCount: newState.errorUpdateCount,\n      isFetched: newState.dataUpdateCount > 0 || newState.errorUpdateCount > 0,\n      isFetchedAfterMount: newState.dataUpdateCount > queryInitialState.dataUpdateCount || newState.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isPending,\n      isLoadingError: isError && !hasData,\n      isPaused: newState.fetchStatus === \"paused\",\n      isPlaceholderData,\n      isRefetchError: isError && hasData,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      promise: this.#currentThenable,\n      isEnabled: resolveEnabled(options.enabled, query) !== false\n    };\n    const nextResult = result;\n    if (this.options.experimental_prefetchInRender) {\n      const finalizeThenableIfPossible = (thenable) => {\n        if (nextResult.status === \"error\") {\n          thenable.reject(nextResult.error);\n        } else if (nextResult.data !== void 0) {\n          thenable.resolve(nextResult.data);\n        }\n      };\n      const recreateThenable = () => {\n        const pending = this.#currentThenable = nextResult.promise = pendingThenable();\n        finalizeThenableIfPossible(pending);\n      };\n      const prevThenable = this.#currentThenable;\n      switch (prevThenable.status) {\n        case \"pending\":\n          if (query.queryHash === prevQuery.queryHash) {\n            finalizeThenableIfPossible(prevThenable);\n          }\n          break;\n        case \"fulfilled\":\n          if (nextResult.status === \"error\" || nextResult.data !== prevThenable.value) {\n            recreateThenable();\n          }\n          break;\n        case \"rejected\":\n          if (nextResult.status !== \"error\" || nextResult.error !== prevThenable.reason) {\n            recreateThenable();\n          }\n          break;\n      }\n    }\n    return nextResult;\n  }\n  updateResult() {\n    const prevResult = this.#currentResult;\n    const nextResult = this.createResult(this.#currentQuery, this.options);\n    this.#currentResultState = this.#currentQuery.state;\n    this.#currentResultOptions = this.options;\n    if (this.#currentResultState.data !== void 0) {\n      this.#lastQueryWithDefinedData = this.#currentQuery;\n    }\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return;\n    }\n    this.#currentResult = nextResult;\n    const shouldNotifyListeners = () => {\n      if (!prevResult) {\n        return true;\n      }\n      const { notifyOnChangeProps } = this.options;\n      const notifyOnChangePropsValue = typeof notifyOnChangeProps === \"function\" ? notifyOnChangeProps() : notifyOnChangeProps;\n      if (notifyOnChangePropsValue === \"all\" || !notifyOnChangePropsValue && !this.#trackedProps.size) {\n        return true;\n      }\n      const includedProps = new Set(\n        notifyOnChangePropsValue ?? this.#trackedProps\n      );\n      if (this.options.throwOnError) {\n        includedProps.add(\"error\");\n      }\n      return Object.keys(this.#currentResult).some((key) => {\n        const typedKey = key;\n        const changed = this.#currentResult[typedKey] !== prevResult[typedKey];\n        return changed && includedProps.has(typedKey);\n      });\n    };\n    this.#notify({ listeners: shouldNotifyListeners() });\n  }\n  #updateQuery() {\n    const query = this.#client.getQueryCache().build(this.#client, this.options);\n    if (query === this.#currentQuery) {\n      return;\n    }\n    const prevQuery = this.#currentQuery;\n    this.#currentQuery = query;\n    this.#currentQueryInitialState = query.state;\n    if (this.hasListeners()) {\n      prevQuery?.removeObserver(this);\n      query.addObserver(this);\n    }\n  }\n  onQueryUpdate() {\n    this.updateResult();\n    if (this.hasListeners()) {\n      this.#updateTimers();\n    }\n  }\n  #notify(notifyOptions) {\n    notifyManager.batch(() => {\n      if (notifyOptions.listeners) {\n        this.listeners.forEach((listener) => {\n          listener(this.#currentResult);\n        });\n      }\n      this.#client.getQueryCache().notify({\n        query: this.#currentQuery,\n        type: \"observerResultsUpdated\"\n      });\n    });\n  }\n};\nfunction shouldLoadOnMount(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.state.data === void 0 && !(query.state.status === \"error\" && options.retryOnMount === false);\n}\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.data !== void 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\nfunction shouldFetchOn(query, options, field) {\n  if (resolveEnabled(options.enabled, query) !== false && resolveStaleTime(options.staleTime, query) !== \"static\") {\n    const value = typeof field === \"function\" ? field(query) : field;\n    return value === \"always\" || value !== false && isStale(query, options);\n  }\n  return false;\n}\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return (query !== prevQuery || resolveEnabled(prevOptions.enabled, query) === false) && (!options.suspense || query.state.status !== \"error\") && isStale(query, options);\n}\nfunction isStale(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.isStaleByTime(resolveStaleTime(options.staleTime, query));\n}\nfunction shouldAssignObserverCurrentProperties(observer, optimisticResult) {\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true;\n  }\n  return false;\n}\nexport {\n  QueryObserver\n};\n//# sourceMappingURL=queryObserver.js.map","\"use client\";\n\n// src/IsRestoringProvider.ts\nimport * as React from \"react\";\nvar IsRestoringContext = React.createContext(false);\nvar useIsRestoring = () => React.useContext(IsRestoringContext);\nvar IsRestoringProvider = IsRestoringContext.Provider;\nexport {\n  IsRestoringProvider,\n  useIsRestoring\n};\n//# sourceMappingURL=IsRestoringProvider.js.map","\"use client\";\n\n// src/QueryErrorResetBoundary.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createValue() {\n  let isReset = false;\n  return {\n    clearReset: () => {\n      isReset = false;\n    },\n    reset: () => {\n      isReset = true;\n    },\n    isReset: () => {\n      return isReset;\n    }\n  };\n}\nvar QueryErrorResetBoundaryContext = React.createContext(createValue());\nvar useQueryErrorResetBoundary = () => React.useContext(QueryErrorResetBoundaryContext);\nvar QueryErrorResetBoundary = ({\n  children\n}) => {\n  const [value] = React.useState(() => createValue());\n  return /* @__PURE__ */ jsx(QueryErrorResetBoundaryContext.Provider, { value, children: typeof children === \"function\" ? children(value) : children });\n};\nexport {\n  QueryErrorResetBoundary,\n  useQueryErrorResetBoundary\n};\n//# sourceMappingURL=QueryErrorResetBoundary.js.map","\"use client\";\n\n// src/errorBoundaryUtils.ts\nimport * as React from \"react\";\nimport { shouldThrowError } from \"@tanstack/query-core\";\nvar ensurePreventErrorBoundaryRetry = (options, errorResetBoundary) => {\n  if (options.suspense || options.throwOnError || options.experimental_prefetchInRender) {\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false;\n    }\n  }\n};\nvar useClearResetErrorBoundary = (errorResetBoundary) => {\n  React.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n};\nvar getHasError = ({\n  result,\n  errorResetBoundary,\n  throwOnError,\n  query,\n  suspense\n}) => {\n  return result.isError && !errorResetBoundary.isReset() && !result.isFetching && query && (suspense && result.data === void 0 || shouldThrowError(throwOnError, [result.error, query]));\n};\nexport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary\n};\n//# sourceMappingURL=errorBoundaryUtils.js.map","// src/suspense.ts\nvar defaultThrowOnError = (_error, query) => query.state.data === void 0;\nvar ensureSuspenseTimers = (defaultedOptions) => {\n  if (defaultedOptions.suspense) {\n    const MIN_SUSPENSE_TIME_MS = 1e3;\n    const clamp = (value) => value === \"static\" ? value : Math.max(value ?? MIN_SUSPENSE_TIME_MS, MIN_SUSPENSE_TIME_MS);\n    const originalStaleTime = defaultedOptions.staleTime;\n    defaultedOptions.staleTime = typeof originalStaleTime === \"function\" ? (...args) => clamp(originalStaleTime(...args)) : clamp(originalStaleTime);\n    if (typeof defaultedOptions.gcTime === \"number\") {\n      defaultedOptions.gcTime = Math.max(\n        defaultedOptions.gcTime,\n        MIN_SUSPENSE_TIME_MS\n      );\n    }\n  }\n};\nvar willFetch = (result, isRestoring) => result.isLoading && result.isFetching && !isRestoring;\nvar shouldSuspend = (defaultedOptions, result) => defaultedOptions?.suspense && result.isPending;\nvar fetchOptimistic = (defaultedOptions, observer, errorResetBoundary) => observer.fetchOptimistic(defaultedOptions).catch(() => {\n  errorResetBoundary.clearReset();\n});\nexport {\n  defaultThrowOnError,\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch\n};\n//# sourceMappingURL=suspense.js.map","\"use client\";\n\n// src/useBaseQuery.ts\nimport * as React from \"react\";\nimport { isServer, noop, notifyManager } from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nimport { useQueryErrorResetBoundary } from \"./QueryErrorResetBoundary.js\";\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary\n} from \"./errorBoundaryUtils.js\";\nimport { useIsRestoring } from \"./IsRestoringProvider.js\";\nimport {\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch\n} from \"./suspense.js\";\nfunction useBaseQuery(options, Observer, queryClient) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (typeof options !== \"object\" || Array.isArray(options)) {\n      throw new Error(\n        'Bad argument type. Starting with v5, only the \"Object\" form is allowed when calling query related functions. Please use the error stack to find the culprit call. More info here: https://tanstack.com/query/latest/docs/react/guides/migrating-to-v5#supports-a-single-signature-one-object'\n      );\n    }\n  }\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const client = useQueryClient(queryClient);\n  const defaultedOptions = client.defaultQueryOptions(options);\n  client.getDefaultOptions().queries?._experimental_beforeQuery?.(\n    defaultedOptions\n  );\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!defaultedOptions.queryFn) {\n      console.error(\n        `[${defaultedOptions.queryHash}]: No queryFn was passed as an option, and no default queryFn was found. The queryFn parameter is only optional when using a default queryFn. More info here: https://tanstack.com/query/latest/docs/framework/react/guides/default-query-function`\n      );\n    }\n  }\n  defaultedOptions._optimisticResults = isRestoring ? \"isRestoring\" : \"optimistic\";\n  ensureSuspenseTimers(defaultedOptions);\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary);\n  useClearResetErrorBoundary(errorResetBoundary);\n  const isNewCacheEntry = !client.getQueryCache().get(defaultedOptions.queryHash);\n  const [observer] = React.useState(\n    () => new Observer(\n      client,\n      defaultedOptions\n    )\n  );\n  const result = observer.getOptimisticResult(defaultedOptions);\n  const shouldSubscribe = !isRestoring && options.subscribed !== false;\n  React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => {\n        const unsubscribe = shouldSubscribe ? observer.subscribe(notifyManager.batchCalls(onStoreChange)) : noop;\n        observer.updateResult();\n        return unsubscribe;\n      },\n      [observer, shouldSubscribe]\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult()\n  );\n  React.useEffect(() => {\n    observer.setOptions(defaultedOptions);\n  }, [defaultedOptions, observer]);\n  if (shouldSuspend(defaultedOptions, result)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary);\n  }\n  if (getHasError({\n    result,\n    errorResetBoundary,\n    throwOnError: defaultedOptions.throwOnError,\n    query: client.getQueryCache().get(defaultedOptions.queryHash),\n    suspense: defaultedOptions.suspense\n  })) {\n    throw result.error;\n  }\n  ;\n  client.getDefaultOptions().queries?._experimental_afterQuery?.(\n    defaultedOptions,\n    result\n  );\n  if (defaultedOptions.experimental_prefetchInRender && !isServer && willFetch(result, isRestoring)) {\n    const promise = isNewCacheEntry ? (\n      // Fetch immediately on render in order to ensure `.promise` is resolved even if the component is unmounted\n      fetchOptimistic(defaultedOptions, observer, errorResetBoundary)\n    ) : (\n      // subscribe to the \"cache promise\" so that we can finalize the currentThenable once data comes in\n      client.getQueryCache().get(defaultedOptions.queryHash)?.promise\n    );\n    promise?.catch(noop).finally(() => {\n      observer.updateResult();\n    });\n  }\n  return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n}\nexport {\n  useBaseQuery\n};\n//# sourceMappingURL=useBaseQuery.js.map","\"use client\";\n\n// src/useQuery.ts\nimport { QueryObserver } from \"@tanstack/query-core\";\nimport { useBaseQuery } from \"./useBaseQuery.js\";\nfunction useQuery(options, queryClient) {\n  return useBaseQuery(options, QueryObserver, queryClient);\n}\nexport {\n  useQuery\n};\n//# sourceMappingURL=useQuery.js.map","import { useNavigate } from 'react-router-dom';\n\ninterface HeaderProps {\n  showBackButton?: boolean;\n  backButtonText?: string;\n}\n\nexport default function Header({ showBackButton = false, backButtonText = \"돌아가기\" }: HeaderProps) {\n  const navigate = useNavigate();\n\n  return (\n    <nav className=\"bg-white/80 backdrop-blur-sm shadow-sm fixed w-full top-0 z-50\">\n      <div className=\"max-w-6xl mx-auto px-6 py-4\">\n        <div className=\"flex justify-between items-center\">\n          <button \n            onClick={() => navigate('/')}\n            className=\"font-bold text-2xl text-purple-600 hover:scale-105 transform transition-all duration-300 cursor-pointer\"\n          >\n            포트폴리오\n          </button>\n          \n          {showBackButton ? (\n            <button \n              onClick={() => navigate('/')}\n              className=\"flex items-center space-x-2 text-gray-700 hover:text-purple-600 hover:scale-105 transform transition-all duration-300 cursor-pointer\"\n            >\n              <i className=\"ri-arrow-left-line text-xl\"></i>\n              <span>{backButtonText}</span>\n            </button>\n          ) : (\n            <div className=\"hidden md:flex space-x-8\">\n              <a href=\"#about\" className=\"text-gray-700 hover:text-purple-400 transition-all duration-300 hover:scale-105 cursor-pointer\">소개</a>\n              <a href=\"#experience\" className=\"text-gray-700 hover:text-purple-400 transition-all duration-300 hover:scale-105 cursor-pointer\">경력</a>\n              <a href=\"#projects\" className=\"text-gray-700 hover:text-purple-400 transition-all duration-300 hover:scale-105 cursor-pointer\">프로젝트</a>\n              <a href=\"#contact\" className=\"text-gray-700 hover:text-purple-400 transition-all duration-300 hover:scale-105 cursor-pointer\">연락처</a>\n            </div>\n          )}\n          \n          <button className=\"md:hidden hover:rotate-180 transition-transform duration-300\">\n            <i className=\"ri-menu-line text-2xl text-gray-700\"></i>\n          </button>\n        </div>\n      </div>\n    </nav>\n  );\n}\n","export default function Footer() {\n  return (\n    <footer className=\"bg-white py-8 px-6\">\n      <div className=\"max-w-6xl mx-auto\">\n        <div className=\"flex flex-col md:flex-row justify-end items-center\">\n          <p className=\"text-gray-600 mb-4 md:mb-0\">© 2025 Park Haebeen</p>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","export default \"__VITE_ASSET__DdERqwXb__\"","export default \"__VITE_ASSET__DiMPkiXI__\"","export default \"__VITE_ASSET__B7dbEr8u__\"","export default \"__VITE_ASSET__DANbrnEJ__\"","import butterLogo from '@/assets/images/logos/butter-logo.png';\nimport jiranLogo from '@/assets/images/logos/jiransoft-logo.png';\nimport lgu1 from '@/assets/images/projects/lgu1.png';\nimport lgu2 from '@/assets/images/projects/lgu2.png';\n\nexport interface Company {\n  name: string;\n  position: string;\n  period: string;\n  description: string;\n  logo: string;\n}\n\nexport interface Project {\n  id: number;\n  title: string;\n  description: string;\n  detailedDescription: string;\n  tech: string[];\n  period: string;\n  imageUrl: string;\n  role: string;\n  challenges: string[];\n  contributions: string[];\n  images: string[];\n  githubUrl: string;\n  liveUrl: string;\n  reflection: string[];\n}\n\nexport const companies: Company[] = [\n  {\n    name: \"버터\",\n    position: \"프론트엔드 개발자 | 대리\",\n    period: \"2024.03 - 재직중\",\n    description: \"대규모 웹 애플리케이션 개발 및 팀 리딩 경험\",\n    logo: butterLogo\n  },\n  {\n    name: \"지란지교소프트\",\n    position: \"프론트엔드 개발자 | 사원\",\n    period: \"2018.12 - 2022.07\",\n    description: \"프론트엔드와 백엔드를 모두 담당하며 다양한 프로젝트 경험\",\n    logo: jiranLogo\n  },\n];\n\nexport const projects: Project[] = [\n  {\n    \"id\": 1,\n    \"title\": \"LG유플러스 멤버십 통합 서비스\",\n    \"description\": \"LG유플러스 멤버십 앱 기능을 유플닷컴으로 내재화한 앱 내 웹뷰 기반 통합 서비스로, 네이티브 앱 업데이트 없이도 실시간 기능 배포와 크로스 플랫폼 호환성을 확보한 하이브리드 아키텍처를 구현했습니다.\",\n    \"detailedDescription\": \"이 프로젝트는 월 10만명 이상의 VIP 고객이 이용하는 대규모 멤버십 플랫폼입니다. VIP콕, 멤버십 사용처, 유플투쁠 이벤트 등 핵심 기능들을 웹뷰로 통합하여 사용자 경험을 일원화했습니다. 특히 iOS WebView 환경에서 발생하는 복잡한 렌더링 이슈를 해결하고, 대기열 시스템을 통해 동시 접속자 급증 시에도 안정적인 서비스를 제공합니다. React Suspense와 TanStack Query를 활용한 상태 관리 최적화, 무한스크롤 페이지네이션 구현, 그리고 VVIP/VIP 차등 정책에 따른 복잡한 사용자 상태 관리까지 전체 프론트엔드 아키텍처를 담당했습니다.\",\n    \"tech\": [\"Next.js 14\", \"React 18\", \"TypeScript\", \"Zustand\", \"TanStack Query\", \"SCSS\", \"NX\", \"Playwright\", \"Storybook\"],\n    \"period\": \"2024.03 - 2025.01\",\n    \"role\": \"Frontend Developer\",\n    \"challenges\": [\n        \"iOS WebView 백화 현상 해결 (position: sticky GPU 컴포지팅 레이어 이슈)\",\n        \"대기열 시스템 구현 및 무한로딩 현상 해결\",\n        \"VVIP/VIP 차등 정책에 따른 복잡한 사용자 상태 관리\",\n        \"동시 접속자 급증 시 서버 부하 및 사용자 대기 문제\",\n        \"앱 업데이트 없이 실시간 기능 배포를 위한 웹뷰 최적화\"\n    ],\n    \"contributions\": [\n        \"iOS WebView 렌더링 이슈 해결로 앱 업데이트 없이도 안정적 서비스 제공\",\n        \"대기열 시스템 구현으로 동시 접속자 급증 시 서버 다운 방지\",\n        \"VIP콕 서비스 개발로 VIP 고객 만족도 향상 및 혜택 이용률 증대\",\n        \"무한스크롤 페이지네이션 최적화로 페이지 로딩 성능 30% 개선\",\n        \"React Suspense 적용으로 서브 페이지 렌더링 단위 분리 및 사용자 경험 개선\"\n    ],\n    \"images\": [lgu1, lgu2],\n    \"githubUrl\": \"\",\n    \"liveUrl\": \"\",\n    \"imageUrl\": lgu1,\n    \"reflection\": [\n        \"이 프로젝트를 통해 가장 큰 깨달음은 '문제의 본질을 파악하는 것의 중요성'이었습니다. iOS WebView 백화 현상을 해결할 때, 처음에는 데이터 로딩 문제로 오해하고 글로벌 로딩 컴포넌트를 제거하고 React Suspense를 적용하는 등 여러 시행착오를 겪었습니다. 하지만 결국 브라우저 렌더링 파이프라인 문제라는 근본 원인을 찾아내고, position: sticky 요소의 GPU 컴포지팅 레이어 생성 과정에서 iOS WebKit의 paint invalidation 실패가 원인임을 파악할 수 있었습니다.\",\n        \"또한 '단순한 해결책이 때로는 최고의 해결책'이라는 것을 배웠습니다. 복잡한 CSS 변경이나 DOM 조작 대신 window.scrollTo()라는 단순한 API로 문제를 해결할 수 있었던 것처럼, 과도한 엔지니어링보다는 문제의 핵심을 정확히 파악하는 것이 중요하다는 것을 깨달았습니다. 이는 앞으로 어떤 기술적 도전을 만나더라도 근본 원인을 찾아내는 사고방식을 기르는 데 큰 도움이 되었습니다.\",\n        \"기술적으로는 React/Next.js 생태계의 깊이를 이해하게 되었고, 특히 Suspense와 Error Boundary를 활용한 에러 처리, TanStack Query의 캐싱 전략, 그리고 WebView 환경의 특수성을 고려한 개발 방법론을 익힐 수 있었습니다. 대기열 시스템 구현 과정에서 useEffect 의존성 배열 관리의 중요성과, 무한스크롤에서 메모리 누수 방지를 위한 가비지 컬렉션 최적화 등 실무에서 바로 적용할 수 있는 구체적인 기술들을 습득했습니다.\",\n        \"팀 협업 측면에서는 복잡한 이슈를 체계적으로 분석하고 해결하는 과정에서 동료들과의 소통과 지식 공유의 중요성을 다시 한번 느꼈습니다. 특히 iOS WebView 이슈 해결 과정에서 팀원들과 함께 문제를 분석하고, 다양한 접근 방법을 시도해보며 최종 해결책을 찾아가는 과정에서 팀워크의 가치를 깊이 체감했습니다. 앞으로도 이런 협업을 통해 더 나은 솔루션을 만들어갈 수 있을 것 같습니다.\"\n    ]\n  },\n  {\n    \"id\": 2,\n    \"title\": \"고사장 브라우저 (시험 감독용 보안 브라우저)\",\n    \"description\": \"시험 부정행위 방지를 위한 보안 브라우저로, 운영체제 레벨 보안 모듈을 통합하여 키보드/마우스 입력 차단, 화면 캡처 방지, 클립보드 제어 등 다중 보안 계층을 구현한 Electron 기반 데스크톱 애플리케이션입니다.\",\n    \"detailedDescription\": \"이 프로젝트는 온라인 시험 환경에서 응시자의 부정행위를 방지하기 위한 보안 브라우저 개발입니다. Rust 기반 proctor-internal 모듈을 Electron에 통합하여 시스템 레벨 보안 기능을 구현했으며, WebContents → WebView 마이그레이션을 통해 UI 가려짐 문제를 해결했습니다. 멀티 탭 시스템과 URL 스킴 처리, 실시간 상태 모니터링 기능을 구현하여 시험 감독자가 원격으로 브라우저를 제어할 수 있도록 했습니다. 특히 보안 모듈 충돌 방지를 위한 뮤텍스 기반 동기화 시스템과 크로스 플랫폼 호환성을 위한 각 OS별 보안 API 통합까지 전체 아키텍처를 담당했습니다.\",\n    \"tech\": [\"Electron 26\", \"React 18\", \"TypeScript\", \"Recoil\", \"Rust\", \"Node.js\", \"Express.js\", \"SCSS\", \"Webpack 5\", \"Electron Builder\"],\n    \"period\": \"2024.01 - 2024.12\",\n    \"role\": \"Full-stack Developer\",\n    \"challenges\": [\n      \"WebContents 사용 시 브라우저 UI가 웹 콘텐츠에 가려지는 문제\",\n      \"보안 모듈 간 충돌로 인한 시스템 불안정성\",\n      \"크로스 플랫폼 환경에서 각 OS별 보안 API 차이점 해결\",\n      \"Windows 키 차단 기능이 제대로 작동하지 않는 버그\",\n      \"멀티 탭 환경에서 메모리 사용량 최적화\",\n      \"Rust 기반 네이티브 모듈을 Electron에 안전하게 통합\"\n    ],\n    \"contributions\": [\n      \"WebView 마이그레이션으로 UI 가려짐 문제 해결 및 사용자 경험 100% 개선\",\n      \"뮤텍스 기반 동기화 시스템으로 보안 모듈 충돌 방지 및 시스템 안정성 확보\",\n      \"멀티 탭 최적화로 메모리 사용량 60% 감소 (포커스된 탭만 활성화)\",\n      \"URL 스킴 처리 시스템 구현으로 외부에서 브라우저 원격 제어 가능\",\n      \"실시간 상태 모니터링 시스템으로 웹캠, 화면공유, 스마트폰 연결 상태 표시\",\n      \"크로스 플랫폼 호환성 확보로 macOS/Windows/Linux 지원\"\n    ],\n    \"images\": [],\n    \"githubUrl\": \"\",\n    \"liveUrl\": \"\",\n    \"imageUrl\": \"\",\n    \"reflection\": [\n      \"이 프로젝트를 통해 가장 큰 깨달음은 '시스템 전체를 이해하는 것의 중요성'이었습니다. Windows 키 차단 버그를 해결할 때, 처음에는 코드 로직만 수정하려고 했지만 결국 package.json의 의존성 관리와 네이티브 모듈 빌드 과정까지 전체적으로 이해해야 해결할 수 있다는 것을 배웠습니다. 단순히 문제가 발생한 부분만 수정하는 것이 아니라 전체 시스템의 연관성을 파악하는 것이 중요하다는 것을 깨달았습니다.\",\n      \"또한 '보안과 사용성의 균형'을 맞추는 것이 얼마나 어려운지 체감했습니다. 강력한 보안 기능을 구현하면서도 직관적인 사용자 경험을 제공하기 위해 WebContents에서 WebView로 아키텍처를 변경하는 등 여러 시행착오를 겪었습니다. 이 과정에서 사용자 중심의 기술적 의사결정이 얼마나 중요한지 배웠습니다.\",\n      \"기술적으로는 Electron 생태계의 깊이를 이해하게 되었고, 특히 네이티브 모듈 통합, IPC 통신, 크로스 플랫폼 개발의 복잡성을 경험했습니다. Rust와 TypeScript를 함께 사용하면서 각 언어의 장점을 살린 하이브리드 개발 방법론을 익힐 수 있었고, Inspector 패턴을 활용한 확장 가능한 보안 모듈 아키텍처 설계 능력을 기를 수 있었습니다.\",\n      \"개인적으로는 '근본 원인을 찾아내는 사고방식'을 기르게 되었습니다. 보안 모듈 충돌 문제를 해결할 때 표면적인 증상만 보고 해결하려다가 실패했지만, 결국 동시성 프로그래밍의 근본 원인을 파악하고 뮤텍스 기반 해결책을 도입하여 완전히 해결할 수 있었습니다. 앞으로 어떤 복잡한 문제를 만나더라도 근본 원인을 찾아내는 분석력을 기를 수 있었습니다.\"\n    ]\n  },\n  {\n    \"id\": 3,\n    \"title\": \"고사장 프로터 웹 시스템 (실시간 감독 플랫폼)\",\n    \"description\": \"온라인 시험 환경에서 감독관이 응시자를 실시간으로 모니터링할 수 있는 웹 기반 감독 시스템입니다. WebRTC 기반 멀티 스트림 관리, Socket.IO 실시간 통신, 동적 그리드 레이아웃을 통해 PC와 모바일 기기에서 동시에 전송되는 비디오/오디오 스트림을 효율적으로 처리하며, 실시간 채팅과 상태 동기화를 제공합니다.\",\n    \"detailedDescription\": \"이 프로젝트는 코로나19로 인한 온라인 시험 환경 확산에 따라 기존 오프라인 감독 시스템을 웹 기반 실시간 감독 시스템으로 전환하는 프로젝트입니다. Vue 3 Composition API와 TypeScript를 활용하여 WebRTC 기반 멀티 스트림 실시간 감독 시스템을 개발했으며, vue3-grid-layout-next를 통한 동적 화면 배치와 실시간 레이아웃 조정 기능을 구현했습니다. 폴링 방식에서 Socket.IO 기반 실시간 통신으로 전환하여 네트워크 트래픽을 90% 감소시키고 응답 속도를 50배 개선했습니다. Pinia를 활용한 전역 상태 관리, 실시간 채팅 및 알림 시스템을 구현하여 감독 효율성을 크게 향상시켰습니다.\",\n    \"tech\": [\"Vue 3\", \"TypeScript\", \"Pinia\", \"Socket.IO\", \"WebRTC\", \"PrimeVue\", \"SCSS\", \"Vite\", \"Docker\", \"Nginx\"],\n    \"period\": \"2024.01 - 2024.12\",\n    \"role\": \"Frontend Developer\",\n    \"challenges\": [\n      \"WebRTC 멀티 스트림 동기화 및 DOM 참조 문제\",\n      \"폴링 방식의 서버 부하 증가 및 실시간성 부족\",\n      \"동적 그리드 레이아웃에서 비동기 처리로 인한 UI 업데이트 지연\",\n      \"실시간 상태 동기화에서 발생하는 데이터 불일치\",\n      \"타임존 처리로 인한 서버 UTC 시간과 클라이언트 로컬 시간 불일치\",\n      \"Socket.IO 연결 상태 관리 및 재연결 처리\"\n    ],\n    \"contributions\": [\n      \"WebRTC 기반 멀티 스트림 실시간 감독 시스템 개발 (PC/모바일 동시 지원)\",\n      \"폴링에서 Socket.IO 기반 실시간 통신으로 전환하여 네트워크 트래픽 90% 감소\",\n      \"vue3-grid-layout-next를 활용한 동적 화면 배치 및 실시간 레이아웃 조정 구현\",\n      \"Pinia를 활용한 전역 상태 관리로 인증, 시험, 스트림 상태 동기화 최적화\",\n      \"실시간 채팅, 알림, 상태 변경을 통한 감독 효율성 향상 및 사용자 경험 개선\",\n      \"타임존 처리 시스템 구현으로 글로벌 서비스 지원\"\n    ],\n    \"images\": [],\n    \"githubUrl\": \"\",\n    \"liveUrl\": \"\",\n    \"imageUrl\": \"\",\n    \"reflection\": [\n      \"이 프로젝트를 통해 가장 큰 깨달음은 '실시간 미디어 스트림 처리의 복잡성'이었습니다. WebRTC 멀티 스트림 관리에서 스트림 동기화와 DOM 참조 문제를 해결할 때, 단순히 코드 로직만 수정하는 것이 아니라 `nextTick`을 활용한 비동기 DOM 업데이트와 동적 ref 할당까지 전체적인 아키텍처를 이해해야 해결할 수 있다는 것을 배웠습니다. 특히 `createLayout` 함수에서 `videoRefs.value[newItemIndex]`를 참조할 때 발생하는 타이밍 이슈를 해결하기 위해 `await nextTick()`을 사용하여 DOM 업데이트를 보장하는 과정에서, 실시간 시스템에서는 예측하기 어려운 타이밍 이슈들이 발생하므로 전체적인 흐름을 파악하는 것이 중요하다는 것을 깨달았습니다.\",\n      \"또한 '폴링과 소켓 통신의 장단점 분석'을 통해 최적의 통신 방식을 선택하는 과정에서 시스템 아키텍처 설계의 중요성을 배웠습니다. 기존 폴링 방식에서 5초마다 API를 호출하던 것을 Socket.IO 기반 실시간 통신으로 전환하여 네트워크 트래픽을 90% 감소시키고 응답 속도를 50배 개선할 수 있었습니다. 특히 `watch` API를 활용한 즉시 UI 업데이트와 `Object.assign`을 통한 반응형 상태 변경으로 사용자 경험을 크게 향상시킬 수 있었습니다. 이 과정에서 기술적 선택이 비즈니스 성과에 미치는 영향을 직접 경험할 수 있었습니다.\",\n      \"기술적으로는 Vue 3 Composition API의 강력함을 실감했습니다. 복잡한 상태 관리와 생명주기 로직을 더 직관적으로 처리할 수 있어, 실시간 감독 시스템 같은 복잡한 애플리케이션에 매우 적합함을 배웠습니다. 특히 `watch` API를 활용한 즉시 UI 업데이트와 Pinia의 모듈화된 상태 관리로 각 도메인별 상태를 효율적으로 분리 관리할 수 있었습니다. 또한 `vue3-grid-layout-next`를 활용한 동적 레이아웃 시스템에서 `reactive`와 `ref`를 적절히 조합하여 실시간으로 변하는 스트림 상태와 UI를 효율적으로 동기화할 수 있었습니다.\",\n      \"실시간 채팅 시스템 구현 과정에서 '사용자 중심 사고의 중요성'을 깨달았습니다. `SidebarManagerChatList` 컴포넌트에서 `watch`를 활용해 새로운 메시지가 올 때마다 즉시 UI를 업데이트하고, `Object.assign`을 통해 기존 객체를 직접 수정하여 반응형 업데이트를 구현했습니다. 이 과정에서 기술적으로 완벽한 시스템이라도 감독관이 사용하기 어렵다면 의미가 없다는 것을 체감했고, 점진적 개선을 통해 시스템의 안정성과 사용성을 높일 수 있다는 것을 배웠습니다. 특히 실시간 감독 상황에서 직관적인 UI/UX가 얼마나 중요한지 깨달았습니다.\",\n      \"개인적으로는 '근본 원인을 찾아내는 사고방식'을 기르게 되었습니다. WebRTC 스트림 처리에서 발생한 DOM 참조 문제를 해결할 때 표면적인 증상만 보고 해결하려다가 실패했지만, 결국 비동기 처리의 근본 원인을 파악하고 `nextTick` 기반 해결책을 도입하여 완전히 해결할 수 있었습니다. 또한 타임존 처리에서 `dayjs`를 활용한 UTC와 로컬 시간 변환 로직을 구현하면서, 서버와 클라이언트 간의 시간 동기화가 얼마나 중요한지 배웠습니다. 특히 `useDate` 유틸리티에서 `dayjs.utc(dt).local().format(format)`을 통해 서버 UTC 시간을 클라이언트 로컬 시간으로 정확히 변환하는 과정에서, 글로벌 서비스에서 타임존 처리가 얼마나 중요한지 깨달았습니다. 앞으로 어떤 복잡한 문제를 만나더라도 근본 원인을 찾아내는 분석력을 기를 수 있었습니다.\"\n    ]\n  }\n];\n","import { companies, projects, type Company, type Project } from '@/data/mockData';\n\n// Mock API 함수들\nexport const mockApi = {\n  // 회사 데이터 가져오기\n  getCompanies: async (): Promise<Company[]> => {\n    // 실제 API처럼 비동기 시뮬레이션\n    await new Promise(resolve => setTimeout(resolve, 100));\n    return companies;\n  },\n\n  // 프로젝트 데이터 가져오기\n  getProjects: async (): Promise<Project[]> => {\n    await new Promise(resolve => setTimeout(resolve, 100));\n    return projects;\n  },\n\n  // 특정 프로젝트 가져오기\n  getProject: async (id: number): Promise<Project | null> => {\n    await new Promise(resolve => setTimeout(resolve, 100));\n    return projects.find(project => project.id === id) || null;\n  },\n\n  // 회사 데이터 업데이트\n  updateCompany: async (id: number, data: Partial<Company>): Promise<Company | null> => {\n    await new Promise(resolve => setTimeout(resolve, 200));\n    // 실제로는 서버에 업데이트 요청을 보냄\n    console.log(`Company ${id} updated:`, data);\n    return companies[0]; // 예시로 첫 번째 회사 반환\n  },\n\n  // 프로젝트 데이터 업데이트\n  updateProject: async (id: number, data: Partial<Project>): Promise<Project | null> => {\n    await new Promise(resolve => setTimeout(resolve, 200));\n    console.log(`Project ${id} updated:`, data);\n    return projects.find(project => project.id === id) || null;\n  },\n\n  // 다른 프로젝트들 가져오기 (현재 프로젝트 제외)\n  getOtherProjects: async (excludeId: number): Promise<Project[]> => {\n    await new Promise(resolve => setTimeout(resolve, 100));\n    return projects.filter(project => project.id !== excludeId);\n  }\n};\n\nexport default mockApi;\n","import { useQuery } from '@tanstack/react-query';\nimport mockApi from '@/api/mockApi';\nimport type { Company, Project } from '@/data/mockData';\n\n// Query Keys\nexport const queryKeys = {\n  companies: ['companies'] as const,\n  projects: ['projects'] as const,\n  project: (id: number) => ['project', id] as const,\n};\n\n// Companies Hook\nexport const useCompanies = () => {\n  return useQuery({\n    queryKey: queryKeys.companies,\n    queryFn: mockApi.getCompanies,\n    staleTime: 1000 * 60 * 5, // 5분\n  });\n};\n\n// Projects Hook\nexport const useProjects = () => {\n  return useQuery({\n    queryKey: queryKeys.projects,\n    queryFn: mockApi.getProjects,\n    staleTime: 1000 * 60 * 5, // 5분\n  });\n};\n\n// Single Project Hook\nexport const useProject = (id: number) => {\n  return useQuery({\n    queryKey: queryKeys.project(id),\n    queryFn: () => mockApi.getProject(id),\n    enabled: !!id, // id가 있을 때만 실행\n    staleTime: 1000 * 60 * 5, // 5분\n  });\n};\n\n// Other Projects Hook\nexport const useOtherProjects = (excludeId: number) => {\n  return useQuery({\n    queryKey: [...queryKeys.projects, 'others', excludeId],\n    queryFn: () => mockApi.getOtherProjects(excludeId),\n    enabled: !!excludeId,\n    staleTime: 1000 * 60 * 5, // 5분\n  });\n};\n\n// Combined Hook for Home Page\nexport const useHomeData = () => {\n  const companiesQuery = useCompanies();\n  const projectsQuery = useProjects();\n\n  return {\n    companies: companiesQuery.data || [],\n    projects: projectsQuery.data || [],\n    isLoading: companiesQuery.isLoading || projectsQuery.isLoading,\n    isError: companiesQuery.isError || projectsQuery.isError,\n    error: companiesQuery.error || projectsQuery.error,\n  };\n};\n\n// Combined Hook for Project Detail Page\nexport const useProjectDetailData = (id: number) => {\n  const projectQuery = useProject(id);\n  const otherProjectsQuery = useOtherProjects(id);\n\n  return {\n    project: projectQuery.data,\n    otherProjects: otherProjectsQuery.data || [],\n    isLoading: projectQuery.isLoading || otherProjectsQuery.isLoading,\n    isError: projectQuery.isError || otherProjectsQuery.isError,\n    error: projectQuery.error || otherProjectsQuery.error,\n  };\n};\n","interface ChipProps {\n  children: React.ReactNode;\n  variant?: 'default' | 'blue' | 'purple' | 'pink' | 'indigo' | 'red' | 'green';\n  size?: 'sm' | 'md' | 'lg';\n  className?: string;\n  onClick?: () => void;\n}\n\nconst variantStyles = {\n  default: 'bg-gray-100 text-gray-700',\n  blue: 'bg-blue-100 text-blue-700',\n  purple: 'bg-purple-100 text-purple-700',\n  pink: 'bg-pink-100 text-pink-700',\n  indigo: 'bg-indigo-100 text-indigo-700',\n  red: 'bg-red-100 text-red-700',\n  green: 'bg-green-100 text-green-700',\n};\n\nconst sizeStyles = {\n  sm: 'px-2 py-1 text-xs',\n  md: 'px-3 py-1 text-sm',\n  lg: 'px-4 py-2 text-sm',\n};\n\nexport default function Chip({ \n  children, \n  variant = 'default', \n  size = 'md', \n  className = '',\n  onClick \n}: ChipProps) {\n  const baseStyles = 'rounded-full font-medium hover:scale-110 transform transition-all duration-300';\n  const variantStyle = variantStyles[variant];\n  const sizeStyle = sizeStyles[size];\n  const clickableStyle = onClick ? 'cursor-pointer' : '';\n\n  return (\n    <span \n      className={`${baseStyles} ${variantStyle} ${sizeStyle} ${clickableStyle} ${className}`}\n      onClick={onClick}\n    >\n      {children}\n    </span>\n  );\n}\n"],"names":["QueryObserver","Subscribable","client","options","#client","#selectError","#currentThenable","pendingThenable","#currentQuery","#currentQueryInitialState","#currentResult","#currentResultState","#currentResultOptions","#selectFn","#selectResult","#lastQueryWithDefinedData","#staleTimeoutId","#refetchIntervalId","#currentRefetchInterval","#trackedProps","shouldFetchOnMount","#executeFetch","#updateTimers","shouldFetchOn","#clearStaleTimeout","#clearRefetchInterval","prevOptions","prevQuery","resolveEnabled","#updateQuery","shallowEqualObjects","mounted","shouldFetchOptionally","resolveStaleTime","#updateStaleTimeout","nextRefetchInterval","#computeRefetchInterval","#updateRefetchInterval","query","result","shouldAssignObserverCurrentProperties","onPropTracked","target","key","defaultedOptions","fetchOptions","promise","noop","staleTime","isServer","isValidTimeout","timeout","timeUntilStale","timeoutManager","nextInterval","focusManager","prevResult","prevResultState","prevResultOptions","queryInitialState","state","newState","isPlaceholderData","data","fetchOnMount","fetchOptionally","fetchState","error","errorUpdatedAt","status","skipSelect","placeholderData","replaceData","selectError","isFetching","isPending","isError","isLoading","hasData","nextResult","isStale","finalizeThenableIfPossible","thenable","recreateThenable","pending","prevThenable","shouldNotifyListeners","notifyOnChangeProps","notifyOnChangePropsValue","includedProps","typedKey","#notify","notifyOptions","notifyManager","listener","shouldLoadOnMount","field","value","observer","optimisticResult","IsRestoringContext","React.createContext","useIsRestoring","React.useContext","createValue","isReset","QueryErrorResetBoundaryContext","useQueryErrorResetBoundary","ensurePreventErrorBoundaryRetry","errorResetBoundary","useClearResetErrorBoundary","React.useEffect","getHasError","throwOnError","suspense","shouldThrowError","ensureSuspenseTimers","clamp","originalStaleTime","args","willFetch","isRestoring","shouldSuspend","fetchOptimistic","useBaseQuery","Observer","queryClient","useQueryClient","isNewCacheEntry","React.useState","shouldSubscribe","React.useSyncExternalStore","React.useCallback","onStoreChange","unsubscribe","useQuery","Header","showBackButton","backButtonText","navigate","useNavigate","jsx","jsxs","Footer","butterLogo","jiranLogo","lgu1","lgu2","companies","projects","mockApi","resolve","id","project","excludeId","queryKeys","useCompanies","useProjects","useProject","useOtherProjects","useHomeData","companiesQuery","projectsQuery","useProjectDetailData","projectQuery","otherProjectsQuery","variantStyles","sizeStyles","Chip","children","variant","size","className","onClick","baseStyles","variantStyle","sizeStyle","clickableStyle"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6]}